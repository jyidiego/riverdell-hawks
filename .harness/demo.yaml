pipeline:
  name: demo
  identifier: demo
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: jyidiego/riverdell-hawks
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: minikube
              namespace: harness-delegate-ng
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: Run
                  identifier: dependencies
                  name: Dependencies
                  spec:
                    connectorRef: account.harnessImage
                    image: golang:latest
                    command: go get
              - step:
                  type: Run
                  identifier: build
                  name: Build
                  spec:
                    connectorRef: account.harnessImage
                    image: golang:latest
                    shell: Sh
                    command: go build
                    resources:
                      limits:
                        memory: 1G
                        cpu: 1000m
              - step:
                  type: Run
                  identifier: test
                  name: Test
                  spec:
                    connectorRef: account.harnessImage
                    image: golang
                    command: |-
                      go install github.com/jstemmer/go-junit-report/v2@latest
                      go test -v ./... | tee report.out
                      cat report.out | go-junit-report -set-exit-code > report.xml
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - report.xml
              - step:
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  template:
                    templateRef: riverdellimagebuild
                    versionLabel: "0.1"
                    gitBranch: main
